version: "3.8"
services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth
    ports:
      - 3000:3000
    environment:
      POSTGRES_HOST: postgres-auth
      POSTGRES_DB: auth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    depends_on:
      - postgres-auth
    networks:
      - auth-network

  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    ports:
      - 5123:5432
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-auth-db:/var/lib/postgresql/data
      - ./init-scripts/create-users.sql:/docker-entrypoint-initdb.d/create-users.sql
    networks:
      - auth-network

  io-service:
        build:
          context: ./io-service
          dockerfile: Dockerfile
        container_name: io
        ports:
            - 5050:5050
        environment:
            PGUSER: admin
            PGPASSWORD: admin
            PGHOST: db-io
            PGDATABASE: ticketing_app_db
            PGPORT: 5432
        networks:
            - db-network
        depends_on:
            - db-io
  
  db-io:
        image: postgres
        container_name: db-io
        environment:
            POSTGRES_DB: ticketing_app_db
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        volumes:
            - ./init-scripts/create-ticketing-app-db.sql:/docker-entrypoint-initdb.d/create-ticketing-app-db.sql
            - postgres-io-db:/var/lib/postgresql/data
        networks:
            - db-network
            - db-admin-io
  
  adminer:
        image: adminer
        container_name: adminer-io
        ports:
            - 8080:8080
        networks:
            - db-admin-io
        depends_on:
            - db-io

volumes:
  postgres-auth-db:
  postgres-io-db:

networks:
  auth-network:
  db-network:
  db-admin-io:
